<?xml version="1.0" encoding="utf-8"?>
<feed version="0.3" xmlns="http://purl.org/atom/ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" xml:lang="en">
<title>QuirksBlog</title>
<link rel="alternate" type="text/html" href="http://www.quirksmode.org/blog/" />
<modified>2014-12-31T15:33:00Z</modified>
<tagline></tagline>
<id>tag:www.quirksmode.org,2014:/blog//1</id>
<generator url="http://www.movabletype.org/" version="3.14">Movable Type</generator>
<copyright>Copyright (c) 2014, ppk</copyright>

<entry>
<title>A new Microsoft browser?</title>
<link rel="alternate" type="text/html" href="http://www.quirksmode.org/blog/archives/2014/12/a_new_microsoft.html" />
<modified>2014-12-31T15:33:00Z</modified>
<issued>2014-12-31T13:02:07Z</issued>
<id>tag:www.quirksmode.org,2014:/blog//1.2445</id>
<created>2014-12-31T13:02:07Z</created>
<summary type="text/plain"><p>Recently the news broke that Microsoft may be working on another browser instead of IE. After reviewing the available evidence I&amp;#8217;ve come to the conclusion that, although Microsoft is making a few adjustments, and a name change for IE might...</p></summary>
<author>
<name>ppk</name>
<url>http://www.quirksmode.org/</url>
<email>ppk@xs4all.nl</email>
</author>
<dc:subject>IE</dc:subject>
<content type="text/html" mode="escaped" xml:lang="en" xml:base="http://www.quirksmode.org/blog/">
<![CDATA[<p>Recently the <a href="http://www.zdnet.com/article/microsoft-is-building-a-new-browser-as-part-of-its-windows-10-push/" class="external">news broke</a> that Microsoft may be working on another browser instead of IE. After reviewing the available evidence I&#8217;ve come to the conclusion that, although Microsoft is making a few adjustments, and a name change for IE might be a good idea, the new browser will essentially be IE12. Still, I think we web developers should support the &#8220;new browser&#8221; narrative.</p>
]]>
<![CDATA[<p>It seems the <a href="http://www.neowin.net/news/internet-explorer-12-big-changes-are-coming-to-trident" class="external">decision was taken</a> to fork Trident, Microsoft&#8217;s rendering engine. One version will essentially be IE11 with all backward-compatible bells and whistles, while the other one will be IE12, although it may carry a different name and will <a href="http://www.neowin.net/news/internet-explorer-12-ui-overhaul-is-a-blend-of-chrome-and-firefox-adds-extension-support" class="external">sport a new interface and support extensions</a>. (IE extensions, that is. Not Chrome or Firefox extensions.)</p>

<p>The idea seems to be that Windows 10 will ship both these browsers. The Internet icon on the desktop will start up IE12, while &#8220;if a page calls for IE to render in a compatibility mode&#8221; IE11 will be started up. I am assuming that what&#8217;s meant here is the <a href="http://msdn.microsoft.com/en-us/library/jj676915(v=vs.85).aspx" class="external">meta versioning switch</a>.</p>

<p>Remember that to this day IE11 also contains IE 10, 9, 8, 7, and 5.5, which are accessible through the <a href="/blog/archives/2008/01/the_versioning_1.html">once-maligned</a> but now mostly-forgotten meta versioning switch, as well as, in the case of 5.5, the good old <a href="/css/quirksmode.html">doctype switch</a>.</p>

<p>The plan seems to be that the new IE12 will not carry all that cruft, but be a forward-looking modern browser. If you need legacy stuff you must start up another browser. Actually this is not such a bad idea. The versioning switch never really caught on on the public Internet (although corporate Intranets may be a different story), so why weigh IE down with a lot of other rendering engines that hardly anyone outside a corporate environment will ever need?</p>

<p>An implication of forking IE is that the new IE11 would be maintained separately from IE12. That might be interesting, although it&#8217;s also a lot of hassle for Microsoft. We&#8217;ll have to see if they&#8217;re really going to maintain two browsers.</p>

<p>Finally, IE may be changing names in the near future. Actually, that&#8217;s a pretty good idea. The brand &#8220;IE&#8221; has become synonymous with slow, old-fashioned, non-standard-compliant browsing &#8212; even though from IE10 on there was little reason for that judgement. But IE is being weighed down by the IE6 legacy, and a new name may be just what it needs. So let&#8217;s do it. (But not &#8220;Spartan,&#8221; please. It doesn&#8217;t make sense for a browser. Why not an explorer from the good old days? Maybe even a Dutch one?)</p>

<p>Internally, when talking to other web devs, you should treat the next Microsoft browser as IE12. Externally, however, when talking to clients and other non-techies, it could make sense to support the &#8220;Microsoft is creating a new browser&#8221; narrative. Who knows, your clients or other contacts may decide it&#8217;s time to say goodbye to their old IE versions and embrace the new browser. That would help them, us, and Microsoft at the same time.</p>
]]>
</content>
</entry>
<entry>
<title>Gradients (and screenshots) update</title>
<link rel="alternate" type="text/html" href="http://www.quirksmode.org/blog/archives/2014/11/gradients_and_s.html" />
<modified>2014-11-26T12:11:25Z</modified>
<issued>2014-11-26T12:09:47Z</issued>
<id>tag:www.quirksmode.org,2014:/blog//1.2444</id>
<created>2014-11-26T12:09:47Z</created>
<summary type="text/plain"><p>Just now I published the retests of the CSS Images and replaced content spec, which includes gradients. It was during these tests yesterday that I discovered Android screenshots aren&amp;#8217;t always trustworthy, and meanwhile I&amp;#8217;ve got enough information for an update....</p></summary>
<author>
<name>ppk</name>
<url>http://www.quirksmode.org/</url>
<email>ppk@xs4all.nl</email>
</author>
<dc:subject>Content</dc:subject>
<content type="text/html" mode="escaped" xml:lang="en" xml:base="http://www.quirksmode.org/blog/">
<![CDATA[<p>Just now I published the retests of the <a href="/css/images/">CSS Images and replaced content</a> spec, which includes gradients. It was during these tests yesterday that I discovered <a href="/blog/archives/2014/11/android_gradien.html">Android screenshots aren&#8217;t always trustworthy</a>, and meanwhile I&#8217;ve got enough information for an update.</p>

<p>Many people advised me to take a screenshot of the screenshot. I did, and it shows the original screenshot correctly instead of repeating the problem. So this avenue of research does not lead anywhere.</p>
]]>
<![CDATA[<h3>The screenshot problem</h3>

<p>The vast majority of commenters agrees that the screenshot problem is caused by incorrect calibration of the device screen; that is, the correct gradient RGBA colour values the browser passes on to the OS cannot be processed correctly, and as a result the colours as shown on the screen are incorrect. However, the screenshot app gets its data directly from the browser, and thus shows the correct colours.</p>

<h4>Meta-screenshots - no go</h4>

<p>The most often-repeated advice I got was to take a screenshot of the published screenshot and see what happens. Apparently the expectation was that this meta-screenshot would have the same problems as the original gradient. That turns out not to be the case.</p>

<p>Here is my first ever meta-screenshot, taken with the Sony Xperia S of <a href="/blog/archives/2014/11/android_gradien.html">yesterday&#8217;s screenshots</a>. For comparison I also repeat the original screenshot.</p>

<p><img src="/blog/pix/gradients/xperia_metascreenshot.png" class="screenshot" alt="A screenshot of yesterday's screenshot."></p>

<p><img src="/blog/pix/gradients/xperia_screenshot.png" class="screenshot" alt="Yesterday's screenshot"></p>

<p>I don&#8217;t see a lot of difference in the gradient, and the conclusion must be that the Xperia handles the image correctly, and does not repeat the original calibration problems here. So this research angle leads nowhere.</p>

<h4>Affected devices</h4>

<p>The final question is which devices are actually incorrectly calibrated. I went through all of my devices that have a browser capable of showing gradients, sent them to <a href="/css/images/position.html">the test page</a>, and the results are in the table below:</p>

<style>
table td {
	border: 1px solid;
	width: 15em;
	padding: 5px;
	vertical-align: top;
}

</style>

<table>
	<tr>
		<th>Calibrated</th>
		<th>Not calibrated</th>
	</tr>
	<tr>
		<td>
			Apple iPad 2<br>
			Apple iPhone 4S<br>
			BlackBerry Z10<br>
			Google Nexus 4<br>
			Google Nexus 7<br>
			HTC M8<br>
			HTC One X<br>
			Huawei C8813<br>
			Microsoft Surface<br>
			Motorola Moto G<br>
			Nintendo Wii U<br>
			Nokia Lumia 520<br>
			Nokia Lumia 820<br>
			Samsung Galaxy Note I<br>
			Samsung Galaxy S4<br>
			Wolfgang AT-AS45FW<br>
			Xiaomi M2<br>
		</td>
		<td>
			LG L5<br>
			Sony Xperia S<br>
			T2Mobile Flame<br>
		</td>
	</tr>
</table>	

<p>It turns out that most devices actually properly calibrate their screens; the only exceptions being the LG L5, Xperia S, and the Flame (the Firefox OS reference device). So this problem may not be as huge as I initially thought.</p>

<h3>Other gradient notes</h3>

<p>The rest of the tests was fairly uneventful. It turns out that all desktop browsers now support the <a href="/css/images/gradients.html">new syntax</a>, and Safari iOS and Chrome Android do as well. The other WebKit-based browsers still require middle syntax. Interesting, but expected.</p>

<p>Also, it turns out that IE has a bug when you define linear gradients with angle keywords in a non-square box. The IE team has meanwhile confirmed the bug and is working on an update. Compare <a href="/css/images/colorstops.html">this page</a> in IE and any other browser, and pay close attention to the red. A corner of each element should show full red, but in IE that doesn&#8217;t happen. Below you see screenshots; IE left, Chrome right.</p>

<p><img src="/blog/pix/gradients/bug_ie.png" alt="Color stop test in IE">
<img src="/blog/pix/gradients/bug_chrome.png" alt="Color stop test in Chrome"></p>

<p>Finally, Firefox now supports <a href="/css/images/image-orientation.html">image-orientation</a>. The other browsers don&#8217;t.</p>

<p>Anyway, this was an eventful retest. I hope my next one is nice and boring.</p>
]]>
</content>
</entry>
<entry>
<title>Android gradient screenshot madness</title>
<link rel="alternate" type="text/html" href="http://www.quirksmode.org/blog/archives/2014/11/android_gradien.html" />
<modified>2014-11-26T12:14:36Z</modified>
<issued>2014-11-25T17:05:00Z</issued>
<id>tag:www.quirksmode.org,2014:/blog//1.2443</id>
<created>2014-11-25T17:05:00Z</created>
<summary type="text/plain"><p>Another fine day at the QuirksMode test labs, where we test browsers so you don&amp;#8217;t have to. Today&amp;#8217;s topic is CSS gradients, and the subtle ways in which the various Android devices fuck them up. Also, the not-so-subtle ways in...</p></summary>
<author>
<name>ppk</name>
<url>http://www.quirksmode.org/</url>
<email>ppk@xs4all.nl</email>
</author>
<dc:subject>Mobile web dev</dc:subject>
<content type="text/html" mode="escaped" xml:lang="en" xml:base="http://www.quirksmode.org/blog/">
<![CDATA[<p>Another fine day at the QuirksMode test labs, where we test browsers so you don&#8217;t have to. Today&#8217;s topic is CSS gradients, and the subtle ways in which the various Android devices fuck them up. Also, the not-so-subtle ways in which Android devices fuck up <strong>screenshots</strong> of said gradients.</p>
]]>
<![CDATA[<p>It turns out that there are differences between gradients on the various Android devices. This is <strong>not</strong> a browser thing, but an actual device thing. I compared the same gradient test on different Android devices in Firefox, Android WebKit, and Chrome, and found the same differences between the browsers. It became obvious that there are incompatibilities between these Androids&#8217; graphical ... thingies, and that browsers don&#8217;t (can&#8217;t?) work around them.</p>

<p>So I thought I&#8217;d write a snarky post embellished with some screenshots. It was when I had made those screenshots that the other shoe dropped: <strong>the screenshots show different gradients  than the screen</strong>. In other words, Android screenshots cannot be trusted to show subtle browser differences. Actual external pictures taken with a camera are mandatory.</p>

<p>This is all so marvelous. No wonder I can&#8217;t quit smoking.</p>

<h3>Show, don&#8217;t tell</h3>

<p>Compare the following two pictures and ponder the differences. Both show the first test on <a href="/css/images/position.html">this page</a> in Chrome 39 for Android on the Sony Xperia S.</p>

<p>The first one is a screenshot taken with the Xperia itself. It shows the more-or-less correct gradient. However, it doesn&#8217;t actually match what the device shows on-screen.</p>

<p><img src="/blog/pix/gradients/xperia_screenshot.png"></p>

<p>The second one is taken with an external camera. It shows what I see on-screen, and it&#8217;s clear that the gradient is subtly different from the one in the screenshot. The yellow doesn&#8217;t form a narrow band, and the gradient from red to orange takes much less space.</p>

<p><img src="/blog/pix/gradients/xperia_camera.png"></p>

<p>The first picture matches what I see in desktop browsers and most other Android devices. The second picture matches what Xperia users will actually see. How much of a problem this is depends on the site&#8217;s graphic design and the exact gradients you use, but it&#8217;s a problem you should be aware of.</p>

<h3>One more for the road</h3>

<p>Hell, let&#8217;s do another one. Here is the same test case, again in Chrome 39, but now on the LG L5. First the screenshot, then the external camera.</p>

<p><img src="/blog/pix/gradients/l5_screenshot.png"></p>

<p>Again, there is a subtle difference between the gradients, though it&#8217;s less pronounced than with the Xperia. Again, the screenshot matches the other browsers much better than what&#8217;s actually on the screen.</p>

<p><img src="/blog/pix/gradients/l5_camera.png"></p>

<h3>What&#8217;s going on?</h3>

<p>It seems clear that the screenshot app uses a different graphical ... thingy than the screen and/or browser. The screenshot app gets the correct gradients, while the browser window on the screen does not. Again, this is a device problem, and not a browser problem. Firefox, Android WebKit, and Chrome show roughly the same gradient on each device, and the same differences from device to device.</p>

<p>Since I don&#8217;t know anything about Android&#8217;s graphical thingies I cannot solve this riddle. Just be aware that there are gradient problems on Android, and also screenshot problems on Android. Wonderful, marvellous.</p>

<p>Now if you&#8217;ll excuse me I&#8217;ll go and drink myself into a stupor.</p>

<p><strong>Update</strong>: The consensus among those who commented on this article is that the device's screens are badly calibrated. So far it seems LG and Sony are affected, but Samsung and HTC are not.</p>

<blockquote><p>The fundamental issue is that a specific RGBA colour value looks
different on different physical displays, but the screen buffer is
generated without taking into account the properties of the display.</p></blockquote>

<p>(Eli Fidler, BlackBerry)</p>

<p>The real point here is that Android screenshots (and remote testing solutions that depend on them) are not reliable enough for web developers to use.</p>

<p><strong>Update 2</strong>: See <a href="/blog/archives/2014/11/gradients_and_s.html">this new article</a> for some more information.</p>]]>
</content>
</entry>
<entry>
<title>Transition tests</title>
<link rel="alternate" type="text/html" href="http://www.quirksmode.org/blog/archives/2014/11/transition_test.html" />
<modified>2014-11-05T14:54:55Z</modified>
<issued>2014-11-05T14:53:57Z</issued>
<id>tag:www.quirksmode.org,2014:/blog//1.2442</id>
<created>2014-11-05T14:53:57Z</created>
<summary type="text/plain"><p>Today I published my tests of CSS transitions in the desktop and mobile browsers. I created the test cases ages ago, but interpreting the results turned out to be tricky....</p></summary>
<author>
<name>ppk</name>
<url>http://www.quirksmode.org/</url>
<email>ppk@xs4all.nl</email>
</author>
<dc:subject>Content</dc:subject>
<content type="text/html" mode="escaped" xml:lang="en" xml:base="http://www.quirksmode.org/blog/">
<![CDATA[<p>Today I <a href="/css/transitions/">published</a> my tests of CSS transitions in the desktop and mobile browsers. I created the test cases ages ago, but interpreting the results turned out to be tricky.</p>
]]>
<![CDATA[<p>Big overview: transitions are supported very well, except in the proxy browsers (which can&#8217;t handle this kind of client-side interactivity) and IE9. However, there are a few more subtle problems:</p>

<ul>
	<li>All WebKit-based browsers except for Safari still require a <code>-webkit-</code> prefix (die! die!) and don&#8217;t support the transitionend event.</li>
	<li>When zooming in on a page, desktop Safari and the desktop Blink-based browsers transition elements. This should NOT happen, since the element&#8217;s state does not change. This is a serious bug that has been in existence for at least two years &#8212; I remember talking to someone about it. <a href="/css/transitions/zoom.html">Try it here</a>. (Since mobile pinch-zooming is totally different from desktop page-zooming this bug only affects the desktop browsers.)</li>
	<li>Firefox on Android, but not on desktop or Firefox OS, handles quite a few properties in a very ugly, jaggy way. <a href="/css/transitions/properties_mobile.html">Details here</a>.</li>
</ul>

<h3>Implied values</h3>

<p>A CSS declaration is only transitionable if it goes from a numeric value to a numeric value. Thus, <code>display</code> will never transition since it doesn&#8217;t have numeric values. An element with <code>height: auto</code> won&#8217;t transition, either, since <code>auto</code> is not a number.</p>

<p>The really tricky thing here is default or implied values (<a href="/css/transitions/impliedvalues.html">desktop</a>, <a href="/css/transitions/impliedvalues_mobile.html">mobile</a>). An element has no <code>letter-spacing</code> defined, and transitions to a state that has <code>letter-spacing: 2px</code>. Should the browser transition it or not? Since the default value of <code>letter-spacing</code> is 0, it should. (Firefox doesn&#8217;t, but that&#8217;s a bug.)</p>

<p>There are more complicated declarations that can trip you up, though. The most important one is <code>left</code>. What if an element has <code>position: absolute</code> but no coordinates defined? <code>left</code> (and, I suppose, the others) is not <code>0</code>, as you might expect, but <code>auto</code>, which is not a number and thus can&#8217;t handle transitions. All WebKit-based browsers handle this wrong, as do older Chromes. (It was fixed between 30 and 33.)</p>

<p>The most complex declaration is <code>border</code>. Suppose an element has no border defined and then transitions to <code>border: 5px solid red</code>. An element without a border has a <code>border-width: 0</code>, that&#8217;s easy. The tricky thing is that <code>border-style</code> uses keywords and thus does not transition.</p>

<style>
div.test {
	-webkit-transition-property: all;
	-webkit-transition-duration: 2s;
	-moz-transition-property: all;
	-moz-transition-duration: 2s;
	-ms-transition-property: all;
	-ms-transition-duration: 2s;
	-o-transition-property: all;
	-o-transition-duration: 2s;
	transition-property: all;
	transition-duration: 2s;
	padding: 10px;
}

div.test:hover {
	border: 5px solid red;
}

</style>

<div class="test">
Hover over this element to view the border effect.
</div>

<p>When transitioning from <code>none</code> to <code>5px solid red</code>, the <code>border-style</code> is immediately set to <code>solid</code>, while <code>border-width</code> transitions in an acceptable way. The users won&#8217;t notice anything. Going the other way, though, <code>border-style</code> is immediately set to <code>none</code> and no transition takes place, which confused me mightily. I actually needed help to figure this out (thanks, <a href="http://www.xanthir.com/blog/" class="external">Tab</a>).</p>

<p>Anyway, this goes to show that doing the tests is not the problem; interpreting them is. I hope I got them all right.</p>
]]>
</content>
</entry>
<entry>
<title>Linkbait 32</title>
<link rel="alternate" type="text/html" href="http://www.quirksmode.org/blog/archives/2014/10/linkbait_32.html" />
<modified>2014-10-03T13:50:35Z</modified>
<issued>2014-10-03T13:49:26Z</issued>
<id>tag:www.quirksmode.org,2014:/blog//1.2441</id>
<created>2014-10-03T13:49:26Z</created>
<summary type="text/plain"><p>From the last month or so, with a few older articles....</p></summary>
<author>
<name>ppk</name>
<url>http://www.quirksmode.org/</url>
<email>ppk@xs4all.nl</email>
</author>
<dc:subject>Linkbait</dc:subject>
<content type="text/html" mode="escaped" xml:lang="en" xml:base="http://www.quirksmode.org/blog/">
<![CDATA[<p>From the last month or so, with a few older articles.</p>
]]>
<![CDATA[<ul class="linkbait">

	<li>Older, but still important. Tomi Ahonen <a href="http://communities-dominate.blogs.com/brands/2014/07/samsung-shock-number-is-official-from-investor-relations.html" class="external">reports</a> that Samsung is losing quite a bit of smartphone sales market share, mostly because of competition from cheap Chinese vendors in the developing world.</li>
	
	<li>Speaking about Tomi, he also <a href="http://communities-dominate.blogs.com/brands/2014/08/first-time-ever-anywhere-international-data-on-smartphone-unique-owner-installed-base-including-regi.html" class="external">found numbers</a> on smartphone unique owner installed base &#8212; in other words, the number of smartphone owners per 100 people in a country. He trusts the numbers for the developed world, but suspects the Indian and Chinese stats, in particular, only come from metropolitan areas where smartphone ownership is a lot higher than in rural areas.</li>

	<li>Opera <a href="http://www.operasoftware.com/press/releases/mobile/2014-09-24" class="external">reports</a> that mobile internet users in India continue to move from feature phones (and not basic, as the headline says) to Androids. It offers some stats about this movement, but it should be remembered that the only way for Opera to get these stats is by measuring Opera Mini usage. Thus, consumers who move from a feature phone with Opera Mini to an Android without Opera Mini are not counted, and the total number may be higher.
	Despite that flaw, it&#8217;s good to have some numbers on the Indian market.</li>
	
	<li>LG is <a href="http://www.theverge.com/2014/10/2/6888445/lg-webos-smartwatch" class="external">working on</a> a webOS smart watch. Since I continue to doubt if browsers can be installed on smart watches with the current state of the hardware, the webOS stuff will likely be about writing apps in HTML5. That&#8217;s cool in itself, but I doubt it&#8217;s going to draw a lot of developers &#8212; also because the next move LG (or any big Asian company) would make to reach out to web developers would be the first.</li>
	
	<li>Interesting Scientia Mobile <a href="http://data.wurfl.io/MOVR/pdf/2014_q2/MOVR_2014_q2.pdf" class="external">report</a> on smartphone usage in western countries relative to Asia. They&#8217;re tweaking the definitions of smartphones and feature phones (about time!)<br>
	Data gathered from hits on WURFL, the device database system that helps you combat device bugs. Some conclusions:
	<ul>
		<li>Tablet usage in the West is over triple that found in Asia.</li>
		<li>Apple market share 39% in the West; 13% in the East</li>
		<li> While Apple dominates the Western markets, Android tablet  manufacturers, as a group, hold a lead over Apple in Asia. Nevertheless, Apple’s 31% share of Asia shows a strong presence. </li>
	</ul>
	Much more good stuff in here. Go read it.</li>
	
	<li>Cyanogen, the independent provider of Android ROMs, will <a href="http://www.techinasia.com/cyanogen-teams-micromax-enter-india/" class="external">team up</a> with Indian device vendor Micromax to create a new generation of affordable Android phones. This is important for web developers because Cyanogen uses Chromium, and not Android WebKit, as its default browser.</li>
	
	<li>Tim Kadlec <a href="http://timkadlec.com/2014/09/js-parse-and-execution-time/" class="external">ran some tests</a> and figured out the parsing and execution time for jQuery 2.1.1 on a variety of mobile and other browsers. The variations are huge; from a median 725 milliseconds on a BlackBerry OS6 to 5 on a modern MacBook Air.<br>
	He concludes that the hardware has the most impact on parsing and execution time, and since a new trend is shaping up where cheap (hence hardware-challenged) phones are being spread through the developing world, this may become a problem in the future. Sure, those phones run modern browsers, but if they don&#8217;t have the hardware to back them up, performance is going to be meh anyway.</li>
	
	<li>Steve Souders <a href="http://www.stevesouders.com/blog/2014/09/12/onload-in-onload/" class="external">studies what happens</a> when an onload event handler is added to a page in a script that&#8217;s called onload. And before you say this is a weird use case, third-party scripts (ads!) do this. And it impacts performance negatively.</li>
	
	<li>Due to the recent addition of touch events to IE11, Jacob Rossi <a href="http://blogs.msdn.com/b/ie/archive/2014/09/05/making-the-web-just-work-with-any-input.aspx" class="external">studies</a> how the three series of events (mouse, touch, and pointer) can cooperate, and where their strong and weak points are.</li>

	<li>You&#8217;ve probably seen this: Yoav Weiss <a href="https://dev.opera.com/articles/native-responsive-images/" class="external">discusses</a> the history and current state of affairs in responsive images.</li>
	
	<li>Christopher Aue <a href="http://christopheraue.net/2014/03/05/vertical-align/" class="external">demystifies</a> <code>vertical-align</code>. And yes, this is complicated.</li>
	
	<li>Max Firtman <a href="http://www.mobilexweb.com/blog/safari-ios8-iphone6-web-developers-designers" class="external">takes a good look</a> at iOS8 and tells us what changed, what stayed the same, and what broke. The most important one is of course the fake DPR of 3 on the iPhone 6+.</li>
	
	<li>In Chromium 37 the event coordinates of touch events <a href="http://updates.html5rocks.com/2014/09/Precision-Touch-for-Precise-Gestures" class="external">are now floating-point</a> instead of integers. This change may make sense, as explained on the page, though only with a DPR higher than 1.</li>
	
	<li>Older, but still very interesting: John Gruber&#8217;s <a href="http://daringfireball.net/2014/08/larger_iphone_display_conjecture" class="external">conjectures on the iPhone 6 sizes</a>. Meanwhile we know the answer, but this article was an eye-opener for me. In particular, it turns out that native iOS development has a concept called <em>points</em>, and if you calculate the number of points that fit on an iOS screen you arrive at exactly the ideal viewport. Thus, native and web are more alike than I thought.<br>
	John&#8217;s iPhone 6+ measurements were off, because he didn&#8217;t anticipate Apple shrinking the display by 13%. Despite that, it&#8217;s a great bit of detective work.</li>
	
	<li>Freddie DeBoer <a href="http://dish.andrewsullivan.com/2014/08/23/the-internet-is-neither-open-nor-free/" class="external">takes exception</a> to the idea that 
	<blockquote>
	<p>the internet as this open space where only talent matters and where everyone has a chance to impact the discussion</p>
	</blockquote>
	Commenters are the bane of civil discussion. That&#8217;s a sad truth bloggers found out about a while ago, but the myth of comments being good on principle should be laid to rest.</li>
	
	<li>Hong Kong protesters, knowing that internet and mobile networks are controlled by the state and may be closed down at any moment, <a href="http://readwrite.com/2014/09/29/firechat-hong-kong-protests" class="external">opt for</a> another way of staying in touch. Essentially, every phone becomes a Bluetooth node, passing on messages until they reach the intended recipient. Due to this decntralized nature, the network is not able to pass private messages: each contributor could read each message that passes through his phone.</li>
	
	<li>A word from our sponsors: Looking for a conference dedicated to web <strong>design</strong>? Look no further than <a href="http://dsgnday.nl" class="external">dsgnday</a>; 11th of November, Amsterdam.</li>
	
	
</ul>
]]>
</content>
</entry>
<entry>
<title>The ninth Chromium: Xiaomi</title>
<link rel="alternate" type="text/html" href="http://www.quirksmode.org/blog/archives/2014/10/the_ninth_chrom.html" />
<modified>2014-10-02T12:40:24Z</modified>
<issued>2014-10-02T12:26:27Z</issued>
<id>tag:www.quirksmode.org,2014:/blog//1.2440</id>
<created>2014-10-02T12:26:27Z</created>
<summary type="text/plain"><p>This week I finally gathered the courage to run the media query test suite I wrote over a year ago in the latest crop of mobile browsers. The results are moderately interesting, especially when it comes to Chromium-based browsers. I...</p></summary>
<author>
<name>ppk</name>
<url>http://www.quirksmode.org/</url>
<email>ppk@xs4all.nl</email>
</author>
<dc:subject>Chrome</dc:subject>
<content type="text/html" mode="escaped" xml:lang="en" xml:base="http://www.quirksmode.org/blog/">
<![CDATA[<p>This week I finally gathered the courage to run the <a href="/css/mediaqueries/mobile.html">media query</a> test suite I wrote over a year ago in the latest crop of mobile browsers. The results are moderately interesting, especially when it comes to Chromium-based browsers. I discovered a new one: Xiaomi Chromium. It&#8217;s the ninth I identified, and the first one I had to work really hard on in order to get a version number.</p>
]]>
<![CDATA[<p>As I have been saying for ages, and <a href="/blog/archives/2014/09/25_of_mobile_ch.html">found some evidence for</a> last week, a browser that identifies itself as Chrome isn&#8217;t necessarily Google Chrome. However, what I was not prepared for is finding a Chromium-based browser that does <em>not</em> identify itself as Chrome. And that&#8217;s exactly what happened.</p>

<p>While running the Android WebKit tests I noticed that the one on the Xiaomi M2 behaved quite differently from the rest. I started to get suspicions, which bloomed into certainty when it turned out it supports the <a href="/css/mediaqueries/features.html">pointer media query</a>, something only Chromium browsers on Android do. (No, desktop Chromes don&#8217;t.) I concluded the Xiaomi default browser is a Chromium, and not an Android WebKit.</p>

<h3>#9</h3>

<p>It&#8217;s the ninth Chromium I know of, so it&#8217;s time to make a list:</p>

<ol>
	<li>Google Chrome; Chromium 37; desktop and mobile. Tested.</li>
	<li>Opera; Chromium 37; desktop and mobile. Tested.</li>
	<li>Yandex; Chromium 36; desktop. Tested.</li>
	<li>Xiaomi; Chromium 34 or 35; mobile. Tested.</li>
	<li>Cyanogen; Chromium 33; mobile. Tested.</li>
	<li>Puffin; Chromium 30; mobile. Tested.</li>
	<li>Samsung; Chromium 28; mobile. Tested.</li>
	<li>Amazon Silk; unknown version; tablet. Not tested.</li>
	<li>Nokia X; unknown version; mobile. Not tested.</li>
</ol>

<p>I think there are a few more desktop browsers that run Chromium (Maxthon, for instance), but I don&#8217;t follow them, so I&#8217;m not sure. The mobile/tablet list is complete, as far as I know.</p>

<p>And no, Chrome on iOS is not on the list. It doesn&#8217;t use Chromium for a rendering engine, but the Apple WebView. That&#8217;s because Apple does not allow anyone to install rendering engines on iOS.</p>

<h3>Detective work</h3>

<p>The problem with the Xiaomi Chromium that it doesn&#8217;t identify itself as such. Its UA string is the following, and note that the keyword <code>Chrome</code> is absent:</p>

<pre>
Mozilla/5.0 (Linux; U; Android 4.1.1; en-us; MI 2 Build/JRO03L)
AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 
Mobile Safari/537.36 XiaoMi/MiuiBrowser/2.0.1
</pre>

<p>The absence of <code>Chrome</code> means that every single browser detect out there will misidentify it. It also means I don&#8217;t know which Chromium version it is.</p>

<p>Fortunately there are compatibility patterns that give a clue as to its version. For ages I tested <a href="/css/mediaqueries/animation.html">four media queries</a> that were <a href="http://trac.webkit.org/export/38760/trunk/WebKitSite/specs/MediaQueriesExtensions.html" class="external">created by Apple</a> in 2008 and thus found their way into WebKit: <code>-webkit-animation</code>, <code>-webkit-transform-2d</code>, <code>-webkit-transform-3d</code>, and <code>-webkit-transition</code>. I thought they would become important. They didn&#8217;t, to the point where Chromium is in the process of removing them.</p>

<p>Fortunately this process is slow, which is why the four media queries can serve as a tracer for Chromium versions. Chromium 33 supported all of them, while Chrome 37 only supports <code>-webkit-transform-3d</code>. (Why? Apparently because it&#8217;s <a href="https://groups.google.com/a/chromium.org/forum/#!msg/blink-dev/lYZC-Xqf_Gw/D6Or7mZHwr4J" class="external">widely used</a> (see first comment).)</p>

<p>The Xiaomi Chromium does not support <code>transition</code>, but it supports the other three. So it would seem Xiaomi Chromium falls somewhere between 33 and 37.</p>

<p>Can we pinpoint the version further? It turns out we have one more clue. The Yandex 14 browser, which uses Chromium 35, has exactly the same compatibility pattern as Xiaomi: no <code>transition</code>, but the other three are supported.</p>

<p>Then I got <em>really</em> lucky. After writing the previous paragraph I decided to see if there&#8217;s an update for Yandex. Turns out there is, and it updates to Chrome 36, which supports only <code>transform-3d</code>.</p>

<p>Thus, we have now ascertained that the Xiaomi Chromium version is higher than 33 and lower than 36. 34 or 35, in other words.</p>

<h3>Google, please help</h3>

<p>This kind of detective work is fun if you have to do it occasionally, and if a vital tracer such as these four media queries is available. I wouldn&#8217;t like to do this for every unidentified Chromium I encounter, though.</p>

<p>That&#8217;s why I&#8217;d like to ask Google to help me out a bit. I would need one of the following two, and preferably both:</p>

<ol>
	<li>An archive of old Chrome on Android versions, with automatic updates disabled. I could use them to run my own comparisons.</li>
	<li>A log file of changes from version to version. High-level only; it just needs to consist of features added and removed, such as the media queries I talked about earlier.</li>
</ol>

<p>This would greatly help me, and other web developers as well, I suppose, to make sense of the increasingly complicated Chromium world.</p>
]]>
</content>
</entry>
<entry>
<title>25% of mobile Chrome users use Samsung Chrome</title>
<link rel="alternate" type="text/html" href="http://www.quirksmode.org/blog/archives/2014/09/25_of_mobile_ch.html" />
<modified>2014-09-26T10:27:43Z</modified>
<issued>2014-09-25T11:18:47Z</issued>
<id>tag:www.quirksmode.org,2014:/blog//1.2439</id>
<created>2014-09-25T11:18:47Z</created>
<summary type="text/plain"><p>For at least a year now I&amp;#8217;ve held to the theory that the huge uptake in Chrome we&amp;#8217;re seeing on the mobile web is mostly due to Samsung using its own version (based on Chromium 28) in its high-end smart...</p></summary>
<author>
<name>ppk</name>
<url>http://www.quirksmode.org/</url>
<email>ppk@xs4all.nl</email>
</author>
<dc:subject>Market share</dc:subject>
<content type="text/html" mode="escaped" xml:lang="en" xml:base="http://www.quirksmode.org/blog/">
<![CDATA[<p>For at least a year now I&#8217;ve held to the theory that the huge uptake in Chrome we&#8217;re seeing on the mobile web is mostly due to Samsung using its own version (based on Chromium 28) in its high-end smart devices from the Galaxy S4 on.</p>

<p>Yesterday <a href="http://krijnhoetmer.nl" class="external">Krijn</a> started tweeting about mobile stats he had, and it turned out he was willing to share. He gave me data on about 100K mobile and tablet hits in Q2 on a project of his he&#8217;s worked on for <del>ages</del> five years. I took the data gratefully and created a <a href="/analytics/analytics.html">table</a>.</p>

<p>Conclusion: Of Chrome users, 25% uses Samsung Chrome &#8212; this amounts to about 5% of all mobile visits to the site. On the one hand this proves that Samsung Chrome is a Thing &#8212; on the other hand I had expected a much higher percentage. So my theory isn&#8217;t right, but Samsung Chrome is still important.</p>
]]>
<![CDATA[<p>Samsung Chrome is not exactly the same as Google Chrome. It&#8217;s still at version 28, and there are some other differences. For instance, it supports <a href="/css/cascading/mobile.html">scoped styles</a>, something Google Chrome never did without a flag. I feel we should take more care to test specifically on Samsung Chrome and separate it from Google Chrome. So buy that Galaxy S4 or S5 and start working.</p>

<h3>Source</h3>

<p>The statistics come from the <a href="http://royal.nl" class="external">Royal</a> sites, which are targeted at a Dutch audience looking for holidays, primarily on the Mediterranean coast, but also elsewhere. The first surprise was that about 45% of total hits came from mobile devices or tablets.</p>

<p>Snapshot: person on couch wanting to book holiday, too lazy to get up to computer, uses tablet or mobile device within reach instead. Still, 45% remains a lot.</p>

<p>More than 50% of these mobile/tablet hits come from Apple devices. Almost all the rest comes from various Androids, and it&#8217;s here that the stats start to become truly interesting.</p>

<h3>Result</h3>

<p>You can browse the full analysis <a href="/analytics/analytics.html">here</a> and compare it to <a href="http://gs.statcounter.com/#mobile+tablet-browser-NL-monthly-201403-201406-bar" class="external">StatCounter&#8217;s analysis</a> of Q2.</p>

<p>This was the general browser make-up:</p>

<table class="browserStats">
	<caption>Q2 mobile/tablet browsers to the Royal sites compared to StatCounter</caption>
	<tr>
		<th>Browser</th>
		<th>Percentage ROYAL</th>
		<th>Percentage STATCOUNTER</th>
	</tr>
	<tr>
		<td>Safari</td>
		<td>59%</td>	
		<td>54%</td>	
	</tr>
	<tr>
		<td>Chrome</td>
		<td>20%</td>		
		<td>20%</td>		
	</tr>
	<tr>
		<td>Android WebKit</td>
		<td>19%</td>
		<td>24%</td>		
	</tr>
	<tr>
		<td>IE</td>
		<td>1%</td>		
		<td>1%</td>		
	</tr>
	<tr>
		<td>Others</td>
		<td>1%</td>		
		<td>1%</td>		
	</tr>
</table>

<p>That&#8217;s a pretty close match &#8212; there&#8217;s only a 5% difference that has gone from Android WebKit to Safari. It&#8217;s fun to theorise about affluent people (Apple!) booking more holidays than less affluent ones (old Androids!), but I&#8217;ll resist that lure.</p>

<p>However, where StatCounter gives you the bare browser numbers at best, I could dig deeper into the Royal stats. I focused on Chrome, since that browser is my biggest worry right now. So what about those 20% Chrome hits?</p>

<table class="browserStats" style="width: 100%">
	<caption>Q2 mobile/tablet Chrome hits to the Royal sites</caption>
	<tr>
		<th>Chrome</th>
		<th>Percentage</th>
		<th>Notes</th>
	</tr>
	<tr>
		<td>Chrome iOS</td>
		<td>42%</td>	
		<td>12.5% of all hits from Apple devices</td>
	</tr>
	<tr>
		<td>Google Chrome latest (34/35)</td>
		<td>31%</td>
		<td>Only 7% of this 31% (= about 2% of all Chrome hits) come from Google Nexus devices</td>
	</tr>
	<tr>
		<td>Samsung Chrome 28</td>
		<td>19%</td>
		<td>Default browser on Galaxy S4 and up</td>
	</tr>
	<tr>
		<td>Samsung Chrome 18</td>
		<td>6%</td>		
		<td>Old default browser on Galaxy S4 and up</td>
	</tr>
	<tr>
		<td>Google Chrome 33</td>
		<td>1%</td>	
		<td rowspan="2">These people didn&#8217;t upgrade their Chrome</td>
	</tr>
	<tr>
		<td>Other Chromes</td>
		<td>1%</td>		
	</tr>
</table>

<p>Surprisingly, Chrome on iOS is the biggest Chrome. It accounts for 42% of Chrome hits, and 12.5% of Apple device hits. One in eight Apple device users uses Chrome, in other words. That&#8217;s WAY more than I expected.</p>

<p>Please remember that Chrome on iOS is NOT in fact Chrome. Apple doesn&#8217;t allow the installation of other rendering engines on iOS, so Chrome is forced to use the Apple WebView, which is essentially Safari with another JavaScript engine.</p>

<p>In the middle of Q2 Google Chrome was updated from 34 to 35, so I combine those two browsers as &#8220;Chrome latest.&#8221; These users use a downloaded Chrome (except the slight number of users actually surfing with a Google Nexus, where Google Chrome is the default browser). Again, this is more than I expected. I thought consumers don&#8217;t download browsers &#8212; it seems I&#8217;m not entirely right here.</p>

<p>Then comes 25% of Chrome users actually using Samsung&#8217;s Chrome, which was first at 18 and then got upgraded to 28. This is the hidden group that no web developer except for me pays attention to.</p>

<p>Finally, 2% other Chromes. These are mostly people who didn&#8217;t update their browsers, I guess.</p>

<h3>Methodology</h3>

<p>The stats were gathered by Google Analytics. Krijn gave me CSV files of the Q2 devices and browsers. Unfortunately these two are separate &#8212; despite more than fifteen years of experience with web stats, the first package that actually cross-references browsers with devices or OSs still has to be written. (I mean, it&#8217;s not THAT difficult to calculate that 23% of Android users use Chrome, and show that fact clearly in the reports, is it? But this seems to be a curious blind spot of analytics package creators.)</p>

<p>I took the devices file, which also includes a browser version number &#8212; but not a name. (Why not? I have no clue. Blind spot etc.) I removed all devices that had less than 10 hits, because I had to manually go through the file and this removed about 75% of the lines without affecting the overall stats too much. I then removed a lot of extra stuff I didn&#8217;t need, and was left with lines like this:</p>

<pre>
Samsung GT-P7310 Galaxy Tab 8.9,4.0,47
</pre>

<p>The first item is clearly a device. The second is the browser version number, the third the number of hits. My job was to match browser version numbers to browser names, and fortunately that was pretty simple most of the time. The <code>4.0</code> above clearly refers to Android WebKit; Chrome has much more complicated version numbers like <code>35.0.1916.141</code>. I also added a device type: phone or tablet. So I manually expanded the line above to the following (and yes, I had to do this for every single line &#8212; more than 300 in total. I&#8217;m glad I removed the long tail.)</p>

<pre>
Samsung GT-P7310 Galaxy Tab 8.9,4.0,47,Android WebKit,tablet
</pre>

<p>In the <a href="/analytics/analytics.html">table</a> I ignored device types for now; I may delve into those at a later date, but right now it wasn&#8217;t my main research question.</p>

<p>If you&#8217;re interested, the sanitized data is <a href="/analytics/data.js">here</a>.</p>

<p>Granted, 100K hits is not really a lot, and I&#8217;d love to repeat the experiment with a much larger set of data. On the other hand, that much larger data set just isn&#8217;t there, and any data is better than no data.</p>


<p><strong>Update</strong>: Peter Gasston <a href="https://twitter.com/stopsatgreen/status/515113197050036224" class="external">tweeted</a> he&#8217;s seeing roughly similar Samsung Chrome numbers: 32% of mobile Chrome users. Chrome iOS at 17% &#8212; distinctly lower than in the data I went through.</p>

<p><strong>Update to update</strong>: I checked Peter's numbers myself, and it turns out only 10% of his Chrome mobile visitors use Samsung Chrome. Also, it seems Google Analytics can't distinguish between Chrome and Android WebKit.</p>
]]>
</content>
</entry>
<entry>
<title>dsgnday announces Peter Boersma</title>
<link rel="alternate" type="text/html" href="http://www.quirksmode.org/blog/archives/2014/09/dsgnday_announc.html" />
<modified>2014-09-23T10:57:52Z</modified>
<issued>2014-09-23T10:56:50Z</issued>
<id>tag:www.quirksmode.org,2014:/blog//1.2438</id>
<created>2014-09-23T10:56:50Z</created>
<summary type="text/plain"><p>On 11th of November we&amp;#8217;ll organise the first dsgnday in Amsterdam; a one-day conference for graphic and UX designers working on the web. Today we announce the last speaker....</p></summary>
<author>
<name>ppk</name>
<url>http://www.quirksmode.org/</url>
<email>ppk@xs4all.nl</email>
</author>
<dc:subject>dsgnday</dc:subject>
<content type="text/html" mode="escaped" xml:lang="en" xml:base="http://www.quirksmode.org/blog/">
<![CDATA[<p>On 11th of November we&#8217;ll organise the first <a href="http://dsgnday.nl" class="external">dsgnday</a> in Amsterdam; a one-day conference for graphic and UX designers working on the web. Today we announce the last speaker.</p>
]]>
<![CDATA[<p>A few weeks back <a href="/blog/archives/2014/09/dsgnday.html">we announced</a> seven out of eight speakers. We still owed you an eighth one, and today we're happy to announce that <a href="http://peterboersma.com" class="external">Peter Boersma</a> has agreed to speak.</p>

<p>While working for increasingly international clients, Peter still managed to become a fixture of the Amsterdam UX scene, organising and hosting several meet-ups and conferences.</p>

<p>At dsgnday he's going to talk about his passion: expanding your influence and improving your design process. UX covers more of the design process than just creating wireframes or code. It should influence and inform all details of the site, and your job isn't done when a wireframe is accepted and implemented.</p>

<p>With the addition of Peter our <a href="http://dsgnday.nl/programme" class="external">line-up</a> is complete. 

<ul>
<li>Mark Boulton, thoughts from his notebook
<li>Bonnie Colville-Hyde, user experience comics
<li>Stephen Hay, designing in the browser
<li>Val Head, designing meaningful animations
<li>Laura Kalbag, accessibility by design
<li>Peter Boersma, expanding your influence
<li>Leisa Reichelt, the strategy is delivery
<li>Mike Rohde, sketchnote mini workshop
</ul>


<p><a href="http://dsgnday.nl/tickets" class="external">Tickets</a> are € 275, and coffee, lunch, and drinks afterwards are included.</p>
]]>
</content>
</entry>
<entry>
<title>Browser stats for Q1 and Q2</title>
<link rel="alternate" type="text/html" href="http://www.quirksmode.org/blog/archives/2014/09/browser_stats_f_8.html" />
<modified>2014-09-17T12:31:31Z</modified>
<issued>2014-09-17T12:30:50Z</issued>
<id>tag:www.quirksmode.org,2014:/blog//1.2437</id>
<created>2014-09-17T12:30:50Z</created>
<summary type="text/plain"><p>It&amp;#8217;s time for some browser stats, as always courtesy of StatCounter....</p></summary>
<author>
<name>ppk</name>
<url>http://www.quirksmode.org/</url>
<email>ppk@xs4all.nl</email>
</author>
<dc:subject>Market share</dc:subject>
<content type="text/html" mode="escaped" xml:lang="en" xml:base="http://www.quirksmode.org/blog/">
<![CDATA[<p>It&#8217;s time for some browser stats, as always courtesy of <a href="http://gs.statcounter.com/" class="external">StatCounter</a>.</p>
]]>
<![CDATA[<p>I didn&#8217;t report the Q1 stats before because I was too busy with <a href="http://www.smashingmagazine.com/2014/04/29/meet-mobile-web-handbook-new-smashing-book-peter-paul-koch/" class="external">the book</a>. So here are the Qa and Q2 stats in one easy-to-digest package.</p>

<p>Headline: Chrome. Q1 and Q2 were Chrome&#8217;s quarters. The browser grew on desktop, mobile, and tablet, though the desktop growth was minimal.</p>

<h3>Mobile</h3>

<p>On mobile Chrome&#8217;s share tripled from January to June &#8212; from 6 to 18% of the total mobile browser market. I&#8217;m not sure what fueled this huge growth. (And don&#8217;t tell me it&#8217;s consumers downloading it of their own free will &#8212; I don&#8217;t believe that.)</p>

<p>First of all the usual caveat (though nobody ever listens to me): I suspect that the majority of these Chrome hits are not Google Chrome but Samsung Chrome &#8212; the default browser of the Galaxy S4 and newer high-end models that currently stands at version 28, instead of Google Chrome&#8217;s 37.</p>

<p>So one explanation of Chrome&#8217;s jump is Samsung selling a lot of high-end devices with Samsung Chrome 28 as their default browser to people who actually surf. Absent actual data this is the explanation I&#8217;m going to believe.</p>

<p>Chrome is still smaller than Android WebKit, but for the first time I&#8217;m starting to see a trend that Chrome will catch up pretty soon. By the end of the year? Possibly. Still, that won&#8217;t mean that Android WebKit will disappear, so you should continue to acquire those Android test devices and test in all Android WebKits you can lay your hands on.</p>

<p>Also interesting is where Chrome&#8217;s growth comes from. Whatever else is happening, Chrome is <em>not</em> replacing Android WebKit. Instead, what these numbers seem to suggest is people switching over from older phones, that run proxy browsers such as Opera Mini, Nokia Xpress, or UC Mini, to newer, higher-end Samsung devices. Android is eating the non-smartphone world, in other words. Horace Dediu <a href="http://www.asymco.com/2014/03/18/invaluable/" class="external">has been saying this forever</a>, and now we found some browser data that could correlate with his theory.</p>

<table class="browserStats">
	<caption>Global mobile browser stats, quarterly</caption>
	<tr>
		<th>Browser</th>
		<th>Q2 2014</th>
		<th class="narrow">ch</th>
		<th>Q1 2014</th>
		<th class="narrow">ch</th>
		<th>Q4 2013</th>
		<th class="narrow">ch</th>
		<th>Q3 2013</th>
		<th class="narrow">ch</th>
		<th>Q2 2013</th>
	</tr>
	<tr>
		<td>Android</td>
		<td>25%</td>
		<td>-1</td>
		<td>26%</td>
		<td>0</td>
		<td>26%</td>
		<td>-2</td>
		<td>28%</td>
		<td>-2</td>
		<td>30%</td>
	</tr>
	<tr>
		<td>Safari</td>
		<td>23%</td>
		<td>+1</td>
		<td>22%</td>
		<td>+1</td>
		<td>21%</td>
		<td>-2</td>
		<td>23%</td>
		<td>-3</td>
		<td>26%</td>
	</tr>
	<tr>
		<td>Chrome</td>
		<td>18%</td>
		<td>+7</td>
		<td>11%</td>
		<td>+5</td>
		<td>6%</td>
		<td>+2</td>
		<td>4%</td>
		<td>+1</td>
		<td>3%</td>
	</tr>
	<tr>
		<td>Opera</td>
		<td>12%</td>
		<td>-1</td>
		<td>13%</td>
		<td>-6</td>
		<td>19%</td>
		<td>+3</td>
		<td>16%</td>
		<td>0</td>
		<td>16%</td>
	</tr>
	<tr>
		<td>UC</td>
		<td>10%</td>
		<td>-1</td>
		<td>11%</td>
		<td>0</td>
		<td>11%</td>
		<td>0</td>
		<td>11%</td>
		<td>+2</td>
		<td>9%</td>
	</tr>
	<tr>
		<td>Nokia</td>
		<td>4%</td>
		<td>-2</td>
		<td>6%</td>
		<td>-1</td>
		<td>7%</td>
		<td>0</td>
		<td>7%</td>
		<td>0</td>
		<td>7%</td>
	</tr>
	<tr>
		<td>BlackBerry</td>
		<td>2%</td>
		<td>0</td>
		<td>2%</td>
		<td>-1</td>
		<td>3%</td>
		<td>0</td>
		<td>3%</td>
		<td>0</td>
		<td>3%</td>
	</tr>
	<tr>
		<td>NetFront</td>
		<td>2%</td>
		<td>0</td>
		<td>2%</td>
		<td>0</td>
		<td>2%</td>
		<td>0</td>
		<td>2%</td>
		<td>0</td>
		<td>2%</td>
	</tr>
	<tr>
		<td>IE</td>
		<td>2%</td>
		<td>0</td>
		<td>2%</td>
		<td>0</td>
		<td>2%</td>
		<td>+1</td>
		<td>1%</td>
		<td>0</td>
		<td>1%</td>
	</tr>
	<tr>
		<td>Other</td>
		<td>2%</td>
		<td>-3</td>
		<td>5%</td>
		<td>+2</td>
		<td>3%</td>
		<td>-2</td>
		<td>5%</td>
		<td>+2</td>
		<td>3%</td>
	</tr>
	<tr class="separator">
		<td>Volatility</td>
		<td></td>
		<td>8%</td>
		<td></td>
		<td>8%</td>
		<td></td>
		<td>6%</td>
		<td></td>
		<td>5%</td>
		<td></td>
	</tr>
	<tr>
		<td>Mobile</td>
		<td>25%</td>
		<td>+2</td>
		<td>23%</td>
		<td>+3</td>
		<td>20%</td>
		<td>+3</td>
		<td>17%</td>
		<td>+2</td>
		<td>15%</td>
	</tr>

</table>

<h3>Desktop</h3>

<p>On desktop Chrome&#8217;s growth is much less pronounced, but it&#8217;s there, and IE bears the cost. If this trend continues Chrome will be the majority desktop browser by the end of the year.</p>

<p>Also, by the end of the year less than two-thirds of global hits on websites will come from desktop browsers. Most of the rest will be mobile browsers. Still need arguments to convince your boss mobile is important? Just show him (or her, I suppose) the numbers.</p>

<table class="browserStats">
	<caption>Global desktop browser stats, quarterly</caption>
	<tr>
		<th>Browser</th>
		<th>Q2 2014</th>
		<th class="narrow">ch</th>
		<th>Q1 2014</th>
		<th class="narrow">ch</th>
		<th>Q4 2013</th>
		<th title="Change" class="narrow">ch</th>
		<th>Q3 2013</th>
		<th title="Change" class="narrow">ch</th>
		<th>Q2 2013</th>
	</tr>
	<tr>
		<td>Chrome</td>
		<td>48%</td>
		<td>+1</td>
		<td>47%</td>
		<td>+3</td>
		<td>44%</td>
		<td>0</td>
		<td>44%</td>
		<td>+1</td>
		<td>43%</td>
	</tr>
	<tr>
		<td>IE</td>
		<td>23%</td>
		<td>-2</td>
		<td>25%</td>
		<td>-3</td>
		<td>28%</td>
		<td>0</td>
		<td>28%</td>
		<td>-1</td>
		<td>29%</td>
	</tr>
	<tr>
		<td>Firefox</td>
		<td>20%</td>
		<td>0</td>
		<td>20%</td>
		<td>0</td>
		<td>20%</td>
		<td>0</td>
		<td>20%</td>
		<td>-1</td>
		<td>21%</td>
	</tr>
	<tr>
		<td>Safari</td>
		<td>5%</td>
		<td>0</td>
		<td>5%</td>
		<td>0</td>
		<td>5%</td>
		<td>0</td>
		<td>5%</td>
		<td>0</td>
		<td>5%</td>
	</tr>
	<tr>
		<td>Opera</td>
		<td>1%</td>
		<td>0</td>
		<td>1%</td>
		<td>0</td>
		<td>1%</td>
		<td>0</td>
		<td>1%</td>
		<td>0</td>
		<td>1%</td>
	</tr>
	<tr>
		<td>Others</td>
		<td>3%</td>
		<td>+1</td>
		<td>2%</td>
		<td>0</td>
		<td>2%</td>
		<td>0</td>
		<td>2%</td>
		<td>+1</td>
		<td>1%</td>
	</tr>
	<tr class="separator">
		<td>Volatility</td>
		<td></td>
		<td>2%</td>
		<td></td>
		<td>3%</td>
		<td></td>
		<td>0</td>
		<td></td>
		<td>2%</td>
		<td></td>
	</tr>
	<tr>
		<td>Desktop</td>
		<td>69%</td>
		<td>-2</td>
		<td>71%</td>
		<td>-4</td>
		<td>75%</td>
		<td>-3</td>
		<td>78%</td>
		<td>-3</td>
		<td>81%</td>
	</tr>
</table>

<h3>Tablet</h3>

<p>And even on tablets Chrome is growing. I&#8217;m not sure if Samsung Chrome is deployed on tablets as well (I don&#8217;t keep close track of the Android tablet market). Here, too, I see Chrome overtaking Android WebKit before the end of the year.</p>

<p>Still, Safari has two-thirds of the tablet browsing market, so any other browser is a footnote.</p>

<table class="browserStats">
	<caption>Global tablet browser stats, quarterly</caption>
	<tr>
		<th>Browser</th>
		<th>Q2 2014</th>
		<th class="narrow">ch</th>
		<th>Q1 2014</th>
		<th class="narrow">ch</th>
		<th>Q4 2013</th>
		<th title="Change" class="narrow">ch</th>
		<th>Q3 2013</th>
		<th title="Change" class="narrow">ch</th>
		<th>Q2 2013</th>
	</tr>
	<tr>
		<td>Safari</td>
		<td>67%</td>
		<td>-1</td>
		<td>68%</td>
		<td>-1</td>
		<td>69%</td>
		<td>-1</td>
		<td>70%</td>
		<td>-2</td>
		<td>72%</td>
	</tr>
	<tr>
		<td>Android</td>
		<td>15%</td>
		<td>-1</td>
		<td>16%</td>
		<td>0</td>
		<td>16%</td>
		<td>0</td>
		<td>16%</td>
		<td>+1</td>
		<td>15%</td>
	</tr>
	<tr>
		<td>Chrome</td>
		<td>12%</td>
		<td>+3</td>
		<td>9%</td>
		<td>+2</td>
		<td>7%</td>
		<td>0</td>
		<td>7%</td>
		<td>0</td>
		<td>7%</td>
	</tr>
	<tr>
		<td>Silk</td>
		<td>3%</td>
		<td>0</td>
		<td>3%</td>
		<td>0</td>
		<td>3%</td>
		<td>0</td>
		<td>3%</td>
		<td>0</td>
		<td>3%</td>
	</tr>
	<tr>
		<td>Opera</td>
		<td>1%</td>
		<td>0</td>
		<td>1%</td>
		<td>0</td>
		<td>1%</td>
		<td>0</td>
		<td>1%</td>
		<td>0</td>
		<td>1%</td>
	</tr>
	<tr>
		<td>Firefox</td>
		<td>1%</td>
		<td>0</td>
		<td>1%</td>
		<td>0</td>
		<td>1%</td>
		<td>0</td>
		<td>1%</td>
		<td>0</td>
		<td>1%</td>
	</tr>
	<tr>
		<td>Others</td>
		<td>1%</td>
		<td>-1</td>
		<td>2%</td>
		<td>-1</td>
		<td>3%</td>
		<td>+1</td>
		<td>2%</td>
		<td>+1</td>
		<td>1%</td>
	</tr>
	<tr class="separator">
		<td>Volatility</td>
		<td></td>
		<td>3%</td>
		<td></td>
		<td>2%</td>
		<td></td>
		<td>1%</td>
		<td></td>
		<td>2%</td>
		<td></td>
	</tr>
	<tr>
		<td>Tablet</td>
		<td>6%</td>
		<td>0</td>
		<td>6%</td>
		<td>+1</td>
		<td>5%</td>
		<td>0</td>
		<td>5%</td>
		<td>+1</td>
		<td>4%</td>
	</tr>
</table>
]]>
</content>
</entry>
<entry>
<title>DOM HTML table updated</title>
<link rel="alternate" type="text/html" href="http://www.quirksmode.org/blog/archives/2014/09/dom_html_table.html" />
<modified>2014-09-16T11:01:52Z</modified>
<issued>2014-09-16T10:44:34Z</issued>
<id>tag:www.quirksmode.org,2014:/blog//1.2436</id>
<created>2014-09-16T10:44:34Z</created>
<summary type="text/plain"><p>And here&amp;#8217;s the first table updated according to the new IE8-and-up rule. It&amp;#8217;s past time I updated the DOM Compatibility tables, even though they&amp;#8217;re not as exciting as they were ten years ago....</p></summary>
<author>
<name>ppk</name>
<url>http://www.quirksmode.org/</url>
<email>ppk@xs4all.nl</email>
</author>
<dc:subject>Content</dc:subject>
<content type="text/html" mode="escaped" xml:lang="en" xml:base="http://www.quirksmode.org/blog/">
<![CDATA[<p>And <a href="/dom/html/">here&#8217;s the first table</a> updated according to the <a href="/blog/archives/2014/09/ie_survey_resul.html">new IE8-and-up rule</a>. It&#8217;s past time I updated the DOM Compatibility tables, even though they&#8217;re not as exciting as they were ten years ago.</p>
]]>
<![CDATA[<p>These tables are mainly about <code>innerHTML</code> and friends, though they also detail some other properties of HTML elements, such as <code>classList</code> and <code>dataset</code>.</p>

<p>Unsurprisingly, all desktop browsers support nearly everything, with only Firefox holding out on not supporting <code>innerText</code> and <code>outerText</code> (though it does support <code>outerHTML</code> &#8212; go figure).</p>

<p>It turns out there are no less than three properties that say something about the page&#8217;s character set, and interesting slight browser incompatibilities. Did you know that, without you specifying UTF-8, IE and Firefox use Windows-1252 while Safari and the Blink browsers use ISO-8859-1? Now that you know, do you care? You always specify UTF-8 anyway, right? Be aware that in Safari, and only in Safari, it&#8217;s utf-8 instead of UTF-8.</p>

<p>Then there&#8217;s <code>document.activeElement</code>, which refers to the element the user is currently focusing on. That&#8217;s usually the BODY, but it could also be a form field or link. I tested it on buttons, links, and regular inputs, and only IE and Firefox support them on all three, though Firefox on Mac doesn&#8217;t do buttons (Windows and Linux do). Blink-based browsers don&#8217;t do links, and Safari does only regular inputs. Go figure.</p>

<p>And so on and so forth. Not the most exciting material, but the <a href="/dom/html/">DOM HTML table</a> now reflects the predilections of today&#8217;s desktop browsers.</p>

<p>I haven&#8217;t done the mobile tests yet; I&#8217;m slowly going through my device lab once again, and I am going to wait for iOS8 before embarking on actual tests.</p>
]]>
</content>
</entry>

</feed>